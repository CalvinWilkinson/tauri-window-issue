{
	// Place your Release Notes workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"useQuery (React Query)": {
		"scope": "typescript,typescriptreact",
		"prefix": "rq",
		"body": [
            "const { isPending, isError, data, error, refetch } = useQuery({",
                "\tqueryKey: [\"${1:QUERY_KEY}\"],",
                "\tqueryFn: async (): Promise<${2:RETURN_TYPE}> => {",
                "\t}",
            "});",
		],
		"description": "useQuery react hook."
	},
    "component": {
		"scope": "typescriptreact",
		"prefix": "comp",
		"body": [
            "import React from \"react\";",
            "",
            "/**",
             "* Creates a new {@link ${1: COMP_NAME}} component.",
             "* @returns The component.",
             "*/",
            "export default function ${1: COMP_NAME}(): React.JSX.Element {",
                "\treturn (",
                    "\t\t<></>",
                "\t);",
            "}",
		],
		"description": "Simple component."
	},
    "component props" :{
        "scope": "typescriptreact",
		"prefix": "comp-props",
		"body": [
            "/**",
            "* The properties for the {@link ${1: COMP_NAME}} component.",
            "*/",
            "interface Props {",
            "}",
		],
		"description": "Component props inteface."
    }
}
